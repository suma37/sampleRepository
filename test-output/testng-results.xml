<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Learning Testng - Ant" duration-ms="139" started-at="2014-09-22T00:16:46Z" finished-at="2014-09-22T00:16:46Z">
    <groups>
    </groups>
    <test name="yahoo mail test" duration-ms="29" started-at="2014-09-22T00:16:46Z" finished-at="2014-09-22T00:16:46Z">
      <class name="test.YahooTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.YahooTest@ac5ba87]" name="beforeTest" is-config="true" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="ReceiveMail()[pri:0, instance:test.YahooTest@ac5ba87]" name="ReceiveMail" duration-ms="2" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveMail -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.YahooTest@ac5ba87]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.YahooTest@ac5ba87]" name="afterMethod" is-config="true" duration-ms="1" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.YahooTest@ac5ba87]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testsendmail()[pri:0, instance:test.YahooTest@ac5ba87]" name="testsendmail" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsendmail -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.YahooTest@ac5ba87]" name="afterMethod" is-config="true" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.YahooTest@ac5ba87]" name="afterTest" is-config="true" duration-ms="1" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.YahooTest -->
    </test> <!-- yahoo mail test -->
    <test name="yahoo news test" duration-ms="3" started-at="2014-09-22T00:16:46Z" finished-at="2014-09-22T00:16:46Z">
      <class name="test.YahooNews">
        <test-method status="PASS" signature="beforeTestNews()[pri:0, instance:test.YahooNews@7c605a28]" name="beforeTestNews" is-config="true" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestNews -->
        <test-method status="PASS" signature="Yahoo_News()[pri:0, instance:test.YahooNews@7c605a28]" name="Yahoo_News" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Yahoo_News -->
      </class> <!-- test.YahooNews -->
    </test> <!-- yahoo news test -->
    <test name="Skip the test example " duration-ms="6" started-at="2014-09-22T00:16:46Z" finished-at="2014-09-22T00:16:46Z">
      <class name="test.SkipTestExample">
        <test-method status="SKIP" signature="beforeTest()[pri:0, instance:test.SkipTestExample@1bf02c8a]" name="beforeTest" is-config="true" duration-ms="0" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test 
	at test.SkipTestExample.beforeTest(SkipTestExample.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="SkiptheTest()[pri:0, instance:test.SkipTestExample@1bf02c8a]" name="SkiptheTest" duration-ms="2" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SkiptheTest -->
      </class> <!-- test.SkipTestExample -->
    </test> <!-- Skip the test example  -->
    <test name="Assertion Example" duration-ms="13" started-at="2014-09-22T00:16:46Z" finished-at="2014-09-22T00:16:46Z">
      <class name="test.YahooTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.YahooTest@ac5ba87]" name="beforeSuite" is-config="true" duration-ms="21" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="shutDownSelenium()[pri:0, instance:test.YahooTest@ac5ba87]" name="shutDownSelenium" is-config="true" duration-ms="1" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDownSelenium -->
      </class> <!-- test.YahooTest -->
      <class name="test.Assertion_Example">
        <test-method status="PASS" signature="AssertionExample()[pri:0, instance:test.Assertion_Example@675c9915]" name="AssertionExample" duration-ms="4" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionExample -->
        <test-method status="FAIL" signature="AssertionExampleFail()[pri:0, instance:test.Assertion_Example@675c9915]" name="AssertionExampleFail" duration-ms="2" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message of AssertionExampleFail expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message of AssertionExampleFail expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at test.Assertion_Example.AssertionExampleFail(Assertion_Example.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionExampleFail -->
        <test-method status="PASS" signature="AssertionFailandContinue()[pri:0, instance:test.Assertion_Example@675c9915]" name="AssertionFailandContinue" duration-ms="1" started-at="2014-09-21T17:16:46Z" finished-at="2014-09-21T17:16:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionFailandContinue -->
      </class> <!-- test.Assertion_Example -->
    </test> <!-- Assertion Example -->
  </suite> <!-- Learning Testng - Ant -->
</testng-results>
